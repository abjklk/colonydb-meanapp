{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/homes/homes.component.ts","./src/app/components/homes/homes.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/upload/upload.component.ts","./src/app/components/upload/upload.component.html","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/colony.service.ts","./src/app/services/home.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","<app-navbar></app-navbar>\n<div class=\"body\">\n  <router-outlet></router-outlet>\n  <app-footer></app-footer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { JwtModule } from \"@auth0/angular-jwt\";\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport {ValidateService} from './services/validate.service';\nimport {AuthService} from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { HomesComponent } from './components/homes/homes.component';\nimport { UploadComponent } from './components/upload/upload.component';\nimport { FooterComponent } from './components/footer/footer.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"id_token\");\n}\n\nconst appRoutes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]},\n  {path:'upload/colony', component: UploadComponent, canActivate:[AuthGuard]},\n  {path:'upload/home', component: HomesComponent, canActivate:[AuthGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    HomesComponent,\n    UploadComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config:{\n        tokenGetter: tokenGetter\n      }\n    }),\n    FormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [ValidateService,AuthService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ColonyService } from '../../services/colony.service';\nimport { HomeService } from '../../services/home.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  colonies: any;\n  wings : any;\n  wingCol : any;\n  homes : any;\n  dispColonies : boolean;\n  dispWings : boolean;\n  dispHomes : boolean;\n\n  constructor(private colonyService: ColonyService, private homeService: HomeService) {\n    this.colonyService.getColonies().subscribe(doc =>{\n      this.colonies = doc.colonies;\n    });\n    this.dispColonies = true;\n    this.dispWings = false;\n    this.dispHomes = false;\n   }\n\n  ngOnInit(): void { }\n\n  showWings(id){\n    let req = {id: id}\n    this.colonyService.getColonybyId(req).subscribe(doc => {\n      this.wings = doc.colony.wings;\n      this.wingCol = doc.colony.name;\n    });\n    this.dispWings = true;\n    this.dispColonies = false;\n  }\n\n  showHomes(name, wing){\n    let req = {colony: name, wing: wing}\n    this.homeService.getHomesByColonyIdAndWing(req).subscribe(doc =>{\n      this.homes = doc.homes;\n    });\n    this.dispHomes = true;\n    this.dispWings = false;\n  }\n\n  goBack(){\n    if(this.dispWings){\n      this.dispColonies = !this.dispColonies;\n      this.dispWings = !this.dispWings;  \n    }\n    else{\n      this.dispWings=!this.dispWings;\n      this.dispHomes=!this.dispHomes;\n    }\n  }\n}\n\n","<br><br><br><br>\n<button type=\"button\" *ngIf=\"!dispColonies\" id=\"back-btn\" class=\"btn btn-outline-primary\" (click)=\"goBack()\">←</button>\n<div class=\"container\">\n    <div *ngIf=\"dispColonies\">\n        <h2>Colonies</h2>\n\n        <div class=\"card\" *ngFor=\"let colony of colonies\">\n            <div id=\"content\">\n                <div id=\"left\">\n                    <div id=\"title\">\n                        <h1>{{colony.name}}</h1>\n                    </div>\n                    <div id=\"btns\">\n                        <button class=\"btn btn-success\" (click)=\"showWings(colony._id)\">Show Buildings</button>\n                    </div>\n                </div>\n                <div id=\"right\">\n                    <h3>\n                        <i class=\"material-icons\">commute</i>\n                        Distance: {{colony.distance}}\n                    </h3>\n                    \n                    <h3>\n                        <i class=\"material-icons\">person</i>\n                        Secretary: {{colony.secretary}}\n                    </h3>\n                    \n                    <h3>\n                        <i class=\"material-icons md-18\">pool</i>\n                        Pool: \n                        <i *ngIf=\"colony.pool\" class=\"material-icons\">check</i>\n                        <i *ngIf=\"!colony.pool\" class=\"material-icons\">clear</i>\n                    </h3>\n                    <h3>\n                        <i class=\"material-icons\">sports_tennis</i>\n                        Sports: \n                        <i *ngIf=\"colony.sports\" class=\"material-icons\">check</i>\n                        <i *ngIf=\"!colony.sports\" class=\"material-icons\">clear</i>\n                    </h3>\n                    <h3>\n                        <i class=\"material-icons\">local_hospital</i>\n                        Hospital:\n                        <i *ngIf=\"colony.phc\" class=\"material-icons\">check</i>\n                        <i *ngIf=\"!colony.phc\" class=\"material-icons\">clear</i>\n                    </h3>\n                    <h3>\n                        <i class=\"material-icons\">call</i>\n                        Contact: {{colony.contact}}\n                    </h3>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div *ngIf=\"dispWings\" style=\"height: 800px\">\n        <h2>Select the wing:</h2>\n        <div id=\"wing-btns\">\n            <span *ngFor=\"let wing of wings\">\n                <button class=\"btn btn-success\" (click)=\"showHomes(wingCol, wing)\">{{wing}}</button>\n            </span>\n        </div>\n    </div>\n\n    <div *ngIf=\"dispHomes\" style=\"height: 800px\">\n        <h2>Homes</h2>\n        <table class=\"table table-hover\">\n            <thead>\n              <tr>\n                <th>House No.</th>\n                <th>Owner Name</th>\n                <th>Wing ID</th>\n                <th>Floor #</th>\n                <th>Size</th>\n                <th>Contact No.</th>\n              </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let home of homes\">\n                    <th scope=\"row\">{{home.hno}}</th>\n                    <td>{{home.owner}}</td>\n                    <td>{{home.wing}}</td>\n                    <td>{{home.floor}}</td>\n                    <td>{{home.size}} BHK</td>\n                    <td>{{home.contact}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<br><br>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"section section-dark\">\n\t<h2>About</h2>\n\t<p>\n\t\tThis Web App was built using MEAN Stack as part of Open-ended activity for the course Web Technologies at SoCSE, KLE Technological University. \n\t</p>\n\t<div id=\"logos\">\n\t\t<img src=\"assets/ts.png\"  width=\"60\" height=\"60\" alt=\"typescript-logo\">\n\t\t<img src=\"assets/node-512.webp\" width=\"60\" height=\"60\" alt=\"nodejs-logo\">\n\t\t<img src=\"assets/mongo.png\" width=\"80\" height=\"80\"  alt=\"mongodb-logo\">\n\t\t<img src=\"assets/angular.png\" width=\"80\" height=\"80\"  alt=\"angular-logo\">\n\t\t<img src=\"assets/html.webp\" width=\"80\" height=\"80\"  alt=\"html-logo\">\n\t\t<img src=\"assets/css.webp\" width=\"80\" height=\"80\"  alt=\"css-logo\">\n\t\t<img src=\"assets/js.png\" width=\"60\" height=\"60\"  alt=\"js-logo\">\n\t</div>\n\t<div id=\"abt\">\n\t\t<h5 style=\"font-weight: bold;\">Team Members</h5>\n\t\t<p>Gourav J - 01FE17BCS246</p>\n\t\t<p>Akash Tomar - 01FE17BCS021</p>\n\t\t<p>Akshata - 01FE17BCS024</p>\n\t\t<p>Akshaykumar Gunari - 01FE17BCS026</p>\n        <p>© 2020</p>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"pimg1\">\n    <div class=\"color-overlay\"></div>\n\t<div class=\"ptext\">\n\t\t<span class=\"border\">\n\t\t\tSoftware Solutions for apartments\n\t\t</span>\n\t</div>\n</div>\n\n<section class=\"section section-light\">\n\t<h3>\n\t\tThe perfect solution for apartment management. It helps you to manage data of your complex all from a single place!\n\t\tReduce your efforts being spent to manage the complex. ColonyDB consists of data pertaining to residents of an apartment which is helpful for use by managers and onsite security officials.\n\t</h3>\n</section>\n\n<div class=\"pimg4\">\n\t<div class=\"ptext\">\n\t\t<span class=\"border\">\n\t\t\tTEAM A1\n\t\t</span>\n\t</div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { HomeService } from '../../services/home.service';\nimport { ColonyService } from '../../services/colony.service';\n\n@Component({\n  selector: 'app-homes',\n  templateUrl: './homes.component.html',\n  styleUrls: ['./homes.component.css']\n})\nexport class HomesComponent implements OnInit {\n\n  hno: number;\n  owner: String;\n  wing: String;\n  floor: number;\n  size: number;\n  contact: String;\n  \n  status: String;\n  colony: any;\n  colonies: Array<Object>;\n  \n  constructor(private homeService: HomeService, private colonyService: ColonyService) {\n    this.colonyService.getColonies().subscribe(doc =>{\n      this.colonies = doc.colonies;\n    });\n    this.colony=[];\n    this.wing=\"\";\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  addHome(){\n    if (typeof this.owner == 'undefined' || typeof this.owner == 'undefined' || typeof this.owner == 'undefined' ||this.colony.length==0||this.wing==\"\"||typeof this.contact == \"undefined\") {\n      this.status = \"Enter All Fields\";\n    }\n    else if (isNaN(this.hno)){\n      this.status = \"X Improper House No.\";\n    }\n    else if (isNaN(this.floor)){\n      this.status = \"X Improper Floor No.\";\n    }\n    else if (isNaN(this.size)){\n      this.status = \"X Improper Size\";\n    }\n    else{\n      let home = {\n        hno: this.hno,\n        owner: this.owner,\n        colony: this.colony.name,\n        wing: this.wing,\n        floor: this.floor,\n        size: this.size,\n        contact: this.contact,\n      } \n\n      this.homeService.insertHome(home).subscribe(data =>{\n        this.status = data.msg;\n      });\n    }\n  }\n  }\n","<br><br><br>\n<div class=\"container\">\n    <div class=\"content\">\n        <div class=\"form\">\n            <form class=\"homes-form\" id=\"homes-form\">\n                <p id=\"status\">{{status}}</p>\n                <!-- <input type=\"text\" placeholder=\"name\"/> -->\n                <input type=\"text\" [(ngModel)]=\"hno\" name=\"hno\" placeholder=\"House no.\"/>\n                <input type=\"text\" [(ngModel)]=\"owner\" name=\"owner\" placeholder=\"Owner Name\"/>\n\n                <select [(ngModel)]=\"colony\" name=\"colony\">\n                    <option value=\"\" disabled selected>Select Colony</option>\n                    <option [ngValue]=\"c\" *ngFor=\"let c of colonies\">{{c.name}}</option>\n                </select>\n\n                <select [(ngModel)]=\"wing\" name=\"wing\">\n                    <option value=\"\" disabled selected>Select Wing</option>\n                    <option [ngValue]=\"w\" *ngFor=\"let w of colony.wings\">{{w}}</option>\n                </select>\n\n                <input type=\"text\" [(ngModel)]=\"floor\" name=\"floor\" placeholder=\"Floor No.\"/>\n                <input type=\"text\" [(ngModel)]=\"size\" name=\"size\" placeholder=\"Select Size (BHK)\"/>\n                <input type=\"text\" [(ngModel)]=\"contact\" name=\"contact\" placeholder=\"Contact Info\"/>\n                <button (click)=\"addHome()\">Add Home</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  status: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.status = \"You are now logged in.\";\n        this.router.navigate(['dashboard']);\n      } else{\n        this.status = data.msg;\n      }\n    });\n  }\n}\n","<div class=\"login-page\">\n    <h3>login</h3>\n    <div class=\"form\">\n        <p id=\"status\">{{status}}</p>\n        <form>\n            <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"username\"/>\n            <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"password\"/>\n            <button id=\"login-btn\" (click)=\"onSubmit()\">login</button>\n            <p class=\"message\">Not registered? <a [routerLink]=\"['/register']\">Create an account</a></p>\n        </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service'; \n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {  \n  }\n\n}\n","<div class=\"header\">\n    <span id=\"logo\">\n        <img src=\"assets/building.png\" width=\"50\" height=\"50\" style=\"text-align: center;\">\n        <h2 class=\"display-3\">ColonyDB</h2>\n    </span>\n    <div class=\"color-overlay\"></div>\n</div>\n\n<nav class=\"navbar navbar-expand-md navbar-dark bg-dark sticky-top\">\n    <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#collapse_target\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"collapse_target\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item\">\n                <a *ngIf=\"!authService.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n            </li>\n            <li class=\"nav-item\">\n                <a *ngIf=\"!authService.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/register']\">Signup</a>\n            </li>\n            <li class=\"nav-item\">\n                <a *ngIf=\"authService.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n            </li>\n            <li>\n                <a *ngIf=\"authService.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/profile']\">Profile</a>\n            </li>\n            \n            <li class=\"nav-item dropdown\" *ngIf=\"authService.loggedIn()\">\n                <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" data-target=\"dropdown_target\" href=\"#\">\n                    Add Item\n                    <span class=\"caret\"></span>\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdown-target\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['/upload/colony']\">Colony</a>\n                    <div class=\"dropdown-divider\"></div>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/upload/home']\">Home</a>\n                </div>\n            </li>\n            <li>\n                <a *ngIf=\"authService.loggedIn()\" class=\"nav-link\" href=\"#\" (click)=\"authService.logout()\">Sign Out</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any;\n\n  constructor() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n   }\n  \n  ngOnInit(): void { \n  }\n\n}\n","<br><br>\n<div class=\"container\" style=\"height:800px;\">\n    <h2>Profile</h2>\n    <br><br>\n    <table class=\"table table-hover\">\n        <tbody>\n          <tr>\n            <th scope=\"row\">Name</th>\n            <td></td>\n            <td>{{user.name}}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Email</th>\n            <td></td>\n            <td>{{user.email}}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Username</th>\n            <td></td>\n            <td>@{{user.username}}</td>\n          </tr>\n        </tbody>\n      </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  status: String;\n\n  constructor(\n    private validateService: ValidateService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(){\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    }\n\n    //Validate all fields \n    if(!this.validateService.validateRegister(user)){\n      this.status=\"X  Please fill in all the fields.\";\n      return false;\n    } else{\n      this.status=\"\";\n    }\n\n    //Validate Email\n    if(!this.validateService.validateEmail(user.email)){\n      this.status=\"X  Please use a valid email.\";\n      return false;\n    } else{\n      this.status=\"\";\n    }\n\n    //Validate Password\n    if(!this.validateService.validatePassword(user.password)){\n      this.status=\"X Weak Password.\";\n      return false;\n    } else{\n      this.status = \"\";\n    }\n\n    //Register User\n    this.authService.registerUser(user).subscribe(data => {\n      console.log(data);\n      if(data.success){\n        this.status = \"You are now registered!\";\n      } else{\n        this.status = \"Some error occured!\";\n      }\n    });\n  }\n}\n","<div class=\"login-page\">\n    <h3>signup</h3>\n    <div class=\"form\">\n        <p id=\"status\">{{status}}</p>\n        <form>\n            <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" placeholder=\"Enter your name\"/>\n            <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Pick a username\"/>\n            <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Enter your email\"/>\n            <input type=\"password\"  [(ngModel)]=\"password\" name=\"password\" placeholder=\"Pick a password\"/>\n            <button id=\"signup-btn\" (click)=\"onSubmit()\">create</button>\n            <p class=\"message\">Already registered? <a [routerLink]=\"['/login']\">Sign In</a></p>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ColonyService } from '../../services/colony.service';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n\n  name: String;\n  wings: Array<String>;\n  distance: number;\n  secretary: String;\n  contact: String;\n  sports: Boolean;\n  pool: Boolean;\n  phc: Boolean;\n  \n  status : String;\n  wingNum : number;\n\n  constructor(private colonyService: ColonyService) { \n    this.sports = false;\n    this.phc = false;\n    this.pool = false;\n    this.wings=[];\n  }\n\n  ngOnInit(): void {\n  }\n\n  addColony(){\n    if (typeof this.name == 'undefined' || typeof this.wingNum == 'undefined' || typeof this.secretary == 'undefined'){\n      this.status = \"X Enter All Fields\";\n    }\n    else if (isNaN(this.wingNum) || this.wingNum>26){\n      this.status = \"X Improper Wing #\";\n    }\n    else if(isNaN(this.distance)){\n      this.status = \"X Improper Distance\";\n    }\n    else{\n      for (var i = 0; i < this.wingNum; i++) {\n        this.wings.push((i+10).toString(36).toUpperCase());     \n      }\n      let colony = {\n        name: this.name,\n        wings: this.wings,\n        distance: this.distance,\n        secretary: this.secretary,\n        contact: this.contact,\n        sports: this.sports,\n        pool: this.pool,\n        phc: this.phc\n      } \n      this.colonyService.insertColony(colony).subscribe(data =>{\n        this.status = data.msg; \n      });\n    }\n  }\n}\n","<br><br>\n<div class=\"container\">\n    <div class=\"content\">\n    <div class=\"form\">\n        <form class=\"colony-form\" id=\"colony-form\">\n            <p id=\"status\">{{status}}</p>\n            <!-- <input type=\"text\" placeholder=\"name\"/> -->\n            <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" required placeholder=\"colony name\"/>\n            <input type=\"text\" [(ngModel)]=\"wingNum\" name=\"wingNum\" placeholder=\"No. of wings\"/>\n            <input type=\"text\" [(ngModel)]=\"distance\" name=\"distance\" placeholder=\"distance\"/>\n            <input type=\"text\" [(ngModel)]=\"contact\" name=\"contact\" placeholder=\"Mobile Number\"/>\n            <input type=\"text\" [(ngModel)]=\"secretary\" name=\"secretary\" placeholder=\"secretary name\"/>\n            <div class=\"checkbox\" style=\"display: flex;justify-content: space-around;\">\n                <label><input [(ngModel)]=\"phc\" name=\"phc\" type=\"checkbox\" value=\"\">Hospital</label>\n                <label><input [(ngModel)]=\"pool\" name=\"pool\" type=\"checkbox\" value=\"\">Pool</label>\n                <label><input [(ngModel)]=\"sports\" name=\"sports\" type=\"checkbox\" value=\"\">Sports</label>\n            </div>\n            <button (click)=\"addColony()\">create colony</button>\n        </form>\n    </div>\n</div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor (\r\n    private authService:AuthService, \r\n    private router:Router\r\n  ){ }\r\n\r\n  canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n\n  constructor(private http:HttpClient,private jwtHelper: JwtHelperService, private router: Router) { }\n\n  registerUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('users/register', user,{headers: headers});\n  }\n\n  authenticateUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('users/authenticate', user,{headers: headers});\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    // console.log(this.jwtHelper.isTokenExpired());\n    return !this.jwtHelper.isTokenExpired();\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n    this.router.navigate(['/']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColonyService {\n\n  constructor(private http:HttpClient) { }\n\n  getColonies(){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.get<any>('colony/colony', {headers: headers});\n  }\n\n  getColonybyId(id){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('colony/byid', id, {headers: headers});\n  }\n\n  insertColony(colony){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('colony/addcolony', colony, {headers: headers});  \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private http:HttpClient) { }\n\n  getHomesByColonyIdAndWing(doc){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('homes/home', doc, {headers: headers});\n  }\n\n  insertHome(home){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('homes/addhome', home, {headers: headers});      \n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n      return false;\n    } else{\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  validatePassword(pass){\n    const re = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n    return re.test(pass);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}