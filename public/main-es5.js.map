{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/homes/homes.component.ts","webpack:///src/app/components/homes/homes.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/upload/upload.component.ts","webpack:///src/app/components/upload/upload.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/colony.service.ts","webpack:///src/app/services/home.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","tokenGetter","localStorage","getItem","appRoutes","path","component","canActivate","AppModule","forRoot","config","declarations","imports","providers","bootstrap","DashboardComponent","colonyService","homeService","getColonies","subscribe","doc","colonies","dispColonies","dispWings","dispHomes","getColonybyId","wings","colony","wingCol","name","wing","getHomesByColonyIdAndWing","homes","FooterComponent","HomeComponent","HomesComponent","owner","length","contact","status","isNaN","hno","floor","size","home","insertHome","data","msg","addHome","LoginComponent","authService","router","user","username","password","authenticateUser","success","storeUserData","token","navigate","onSubmit","NavbarComponent","ProfileComponent","JSON","parse","RegisterComponent","validateService","email","validateRegister","validateEmail","validatePassword","registerUser","console","log","UploadComponent","sports","phc","pool","wingNum","secretary","distance","i","push","toString","toUpperCase","insertColony","addColony","AuthGuard","loggedIn","AuthService","http","jwtHelper","headers","append","post","setItem","stringify","authToken","isTokenExpired","clear","providedIn","ColonyService","get","HomeService","ValidateService","undefined","re","test","String","toLowerCase","pass","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","<app-navbar></app-navbar>\n<div class=\"body\">\n  <router-outlet></router-outlet>\n  <app-footer></app-footer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { JwtModule } from \"@auth0/angular-jwt\";\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport {ValidateService} from './services/validate.service';\nimport {AuthService} from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { HomesComponent } from './components/homes/homes.component';\nimport { UploadComponent } from './components/upload/upload.component';\nimport { FooterComponent } from './components/footer/footer.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"id_token\");\n}\n\nconst appRoutes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]},\n  {path:'upload/colony', component: UploadComponent, canActivate:[AuthGuard]},\n  {path:'upload/home', component: HomesComponent, canActivate:[AuthGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    HomesComponent,\n    UploadComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config:{\n        tokenGetter: tokenGetter\n      }\n    }),\n    FormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [ValidateService,AuthService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ColonyService } from '../../services/colony.service';\nimport { HomeService } from '../../services/home.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  colonies: any;\n  wings : any;\n  wingCol : any;\n  homes : any;\n  dispColonies : boolean;\n  dispWings : boolean;\n  dispHomes : boolean;\n\n  constructor(private colonyService: ColonyService, private homeService: HomeService) {\n    this.colonyService.getColonies().subscribe(doc =>{\n      this.colonies = doc.colonies;\n    });\n    this.dispColonies = true;\n    this.dispWings = false;\n    this.dispHomes = false;\n   }\n\n  ngOnInit(): void { }\n\n  showWings(id){\n    let req = {id: id}\n    this.colonyService.getColonybyId(req).subscribe(doc => {\n      this.wings = doc.colony.wings;\n      this.wingCol = doc.colony.name;\n    });\n    this.dispWings = true;\n    this.dispColonies = false;\n  }\n\n  showHomes(name, wing){\n    let req = {colony: name, wing: wing}\n    this.homeService.getHomesByColonyIdAndWing(req).subscribe(doc =>{\n      this.homes = doc.homes;\n    });\n    this.dispHomes = true;\n    this.dispWings = false;\n  }\n\n  goBack(){\n    if(this.dispWings){\n      this.dispColonies = !this.dispColonies;\n      this.dispWings = !this.dispWings;  \n    }\n    else{\n      this.dispWings=!this.dispWings;\n      this.dispHomes=!this.dispHomes;\n    }\n  }\n}\n\n","<br><br><br><br>\n<button type=\"button\" *ngIf=\"!dispColonies\" id=\"back-btn\" class=\"btn btn-outline-primary\" (click)=\"goBack()\">←</button>\n<div class=\"container\">\n    <div *ngIf=\"dispColonies\">\n        <h2>Colonies</h2>\n\n        <div class=\"card\" *ngFor=\"let colony of colonies\">\n            <div id=\"content\">\n                <div id=\"left\">\n                    <div id=\"title\">\n                        <h1>{{colony.name}}</h1>\n                    </div>\n                    <div id=\"btns\">\n                        <button class=\"btn btn-success\" (click)=\"showWings(colony._id)\">Show Buildings</button>\n                    </div>\n                </div>\n                <div id=\"right\">\n                    <h3>\n                        <i class=\"material-icons\">commute</i>\n                        Distance: {{colony.distance}}\n                    </h3>\n                    \n                    <h3>\n                        <i class=\"material-icons\">person</i>\n                        Secretary: {{colony.secretary}}\n                    </h3>\n                    \n                    <h3>\n                        <i class=\"material-icons md-18\">pool</i>\n                        Pool: \n                        <i *ngIf=\"colony.pool\" class=\"material-icons\">check</i>\n                        <i *ngIf=\"!colony.pool\" class=\"material-icons\">clear</i>\n                    </h3>\n                    <h3>\n                        <i class=\"material-icons\">sports_tennis</i>\n                        Sports: \n                        <i *ngIf=\"colony.sports\" class=\"material-icons\">check</i>\n                        <i *ngIf=\"!colony.sports\" class=\"material-icons\">clear</i>\n                    </h3>\n                    <h3>\n                        <i class=\"material-icons\">local_hospital</i>\n                        Hospital:\n                        <i *ngIf=\"colony.phc\" class=\"material-icons\">check</i>\n                        <i *ngIf=\"!colony.phc\" class=\"material-icons\">clear</i>\n                    </h3>\n                    <h3>\n                        <i class=\"material-icons\">call</i>\n                        Contact: {{colony.contact}}\n                    </h3>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div *ngIf=\"dispWings\" style=\"height: 800px\">\n        <h2>Select the wing:</h2>\n        <div id=\"wing-btns\">\n            <span *ngFor=\"let wing of wings\">\n                <button class=\"btn btn-success\" (click)=\"showHomes(wingCol, wing)\">{{wing}}</button>\n            </span>\n        </div>\n    </div>\n\n    <div *ngIf=\"dispHomes\" style=\"height: 800px\">\n        <h2>Homes</h2>\n        <table class=\"table table-hover\">\n            <thead>\n              <tr>\n                <th>House No.</th>\n                <th>Owner Name</th>\n                <th>Wing ID</th>\n                <th>Floor #</th>\n                <th>Size</th>\n                <th>Contact No.</th>\n              </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let home of homes\">\n                    <th scope=\"row\">{{home.hno}}</th>\n                    <td>{{home.owner}}</td>\n                    <td>{{home.wing}}</td>\n                    <td>{{home.floor}}</td>\n                    <td>{{home.size}} BHK</td>\n                    <td>{{home.contact}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<br><br>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"section section-dark\">\n\t<h2>About</h2>\n\t<p>\n\t\tThis Web App was built using MEAN Stack as part of Open-ended activity for the course Web Technologies at SoCSE, KLE Technological University. \n\t</p>\n\t<div id=\"logos\">\n\t\t<img src=\"assets/ts.png\"  width=\"60\" height=\"60\" alt=\"typescript-logo\">\n\t\t<img src=\"assets/node-512.webp\" width=\"60\" height=\"60\" alt=\"nodejs-logo\">\n\t\t<img src=\"assets/mongo.png\" width=\"80\" height=\"80\"  alt=\"mongodb-logo\">\n\t\t<img src=\"assets/angular.png\" width=\"80\" height=\"80\"  alt=\"angular-logo\">\n\t\t<img src=\"assets/html.webp\" width=\"80\" height=\"80\"  alt=\"html-logo\">\n\t\t<img src=\"assets/css.webp\" width=\"80\" height=\"80\"  alt=\"css-logo\">\n\t\t<img src=\"assets/js.png\" width=\"60\" height=\"60\"  alt=\"js-logo\">\n\t</div>\n\t<div id=\"abt\">\n\t\t<h5 style=\"font-weight: bold;\">Team Members</h5>\n\t\t<p>Gourav J - 01FE17BCS246</p>\n\t\t<p>Akash Tomar - 01FE17BCS021</p>\n\t\t<p>Akshata - 01FE17BCS024</p>\n\t\t<p>Akshaykumar Gunari - 01FE17BCS026</p>\n        <p>© 2020</p>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"pimg1\">\n    <div class=\"color-overlay\"></div>\n\t<div class=\"ptext\">\n\t\t<span class=\"border\">\n\t\t\tSoftware Solutions for apartments\n\t\t</span>\n\t</div>\n</div>\n\n<section class=\"section section-light\">\n\t<h3>\n\t\tThe perfect solution for apartment management. It helps you to manage data of your complex all from a single place!\n\t\tReduce your efforts being spent to manage the complex. ColonyDB consists of data pertaining to residents of an apartment which is helpful for use by managers and onsite security officials.\n\t</h3>\n</section>\n\n<div class=\"pimg4\">\n\t<div class=\"ptext\">\n\t\t<span class=\"border\">\n\t\t\tTEAM A1\n\t\t</span>\n\t</div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { HomeService } from '../../services/home.service';\nimport { ColonyService } from '../../services/colony.service';\n\n@Component({\n  selector: 'app-homes',\n  templateUrl: './homes.component.html',\n  styleUrls: ['./homes.component.css']\n})\nexport class HomesComponent implements OnInit {\n\n  hno: number;\n  owner: String;\n  wing: String;\n  floor: number;\n  size: number;\n  contact: String;\n  \n  status: String;\n  colony: any;\n  colonies: Array<Object>;\n  \n  constructor(private homeService: HomeService, private colonyService: ColonyService) {\n    this.colonyService.getColonies().subscribe(doc =>{\n      this.colonies = doc.colonies;\n    });\n    this.colony=[];\n    this.wing=\"\";\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  addHome(){\n    if (typeof this.owner == 'undefined' || typeof this.owner == 'undefined' || typeof this.owner == 'undefined' ||this.colony.length==0||this.wing==\"\"||typeof this.contact == \"undefined\") {\n      this.status = \"Enter All Fields\";\n    }\n    else if (isNaN(this.hno)){\n      this.status = \"X Improper House No.\";\n    }\n    else if (isNaN(this.floor)){\n      this.status = \"X Improper Floor No.\";\n    }\n    else if (isNaN(this.size)){\n      this.status = \"X Improper Size\";\n    }\n    else{\n      let home = {\n        hno: this.hno,\n        owner: this.owner,\n        colony: this.colony.name,\n        wing: this.wing,\n        floor: this.floor,\n        size: this.size,\n        contact: this.contact,\n      } \n\n      this.homeService.insertHome(home).subscribe(data =>{\n        this.status = data.msg;\n      });\n    }\n  }\n  }\n","<br><br><br>\n<div class=\"container\">\n    <div class=\"content\">\n        <div class=\"form\">\n            <form class=\"homes-form\" id=\"homes-form\">\n                <p id=\"status\">{{status}}</p>\n                <!-- <input type=\"text\" placeholder=\"name\"/> -->\n                <input type=\"text\" [(ngModel)]=\"hno\" name=\"hno\" placeholder=\"House no.\"/>\n                <input type=\"text\" [(ngModel)]=\"owner\" name=\"owner\" placeholder=\"Owner Name\"/>\n\n                <select [(ngModel)]=\"colony\" name=\"colony\">\n                    <option value=\"\" disabled selected>Select Colony</option>\n                    <option [ngValue]=\"c\" *ngFor=\"let c of colonies\">{{c.name}}</option>\n                </select>\n\n                <select [(ngModel)]=\"wing\" name=\"wing\">\n                    <option value=\"\" disabled selected>Select Wing</option>\n                    <option [ngValue]=\"w\" *ngFor=\"let w of colony.wings\">{{w}}</option>\n                </select>\n\n                <input type=\"text\" [(ngModel)]=\"floor\" name=\"floor\" placeholder=\"Floor No.\"/>\n                <input type=\"text\" [(ngModel)]=\"size\" name=\"size\" placeholder=\"Select Size (BHK)\"/>\n                <input type=\"text\" [(ngModel)]=\"contact\" name=\"contact\" placeholder=\"Contact Info\"/>\n                <button (click)=\"addHome()\">Add Home</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  status: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.status = \"You are now logged in.\";\n        this.router.navigate(['dashboard']);\n      } else{\n        this.status = data.msg;\n      }\n    });\n  }\n}\n","<div class=\"login-page\">\n    <h3>login</h3>\n    <div class=\"form\">\n        <p id=\"status\">{{status}}</p>\n        <form>\n            <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"username\"/>\n            <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"password\"/>\n            <button id=\"login-btn\" (click)=\"onSubmit()\">login</button>\n            <p class=\"message\">Not registered? <a [routerLink]=\"['/register']\">Create an account</a></p>\n        </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service'; \n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {  \n  }\n\n}\n","<div class=\"header\">\n    <span id=\"logo\">\n        <img src=\"assets/building.png\" width=\"50\" height=\"50\" style=\"text-align: center;\">\n        <h2 class=\"display-3\">ColonyDB</h2>\n    </span>\n    <div class=\"color-overlay\"></div>\n</div>\n\n<nav class=\"navbar navbar-expand-md navbar-dark bg-dark sticky-top\">\n    <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#collapse_target\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"collapse_target\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item\">\n                <a *ngIf=\"!authService.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n            </li>\n            <li class=\"nav-item\">\n                <a *ngIf=\"!authService.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/register']\">Signup</a>\n            </li>\n            <li class=\"nav-item\">\n                <a *ngIf=\"authService.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n            </li>\n            <li>\n                <a *ngIf=\"authService.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/profile']\">Profile</a>\n            </li>\n            \n            <li class=\"nav-item dropdown\" *ngIf=\"authService.loggedIn()\">\n                <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" data-target=\"dropdown_target\" href=\"#\">\n                    Add Item\n                    <span class=\"caret\"></span>\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdown-target\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['/upload/colony']\">Colony</a>\n                    <div class=\"dropdown-divider\"></div>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/upload/home']\">Home</a>\n                </div>\n            </li>\n            <li>\n                <a *ngIf=\"authService.loggedIn()\" class=\"nav-link\" href=\"#\" (click)=\"authService.logout()\">Sign Out</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any;\n\n  constructor() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n   }\n  \n  ngOnInit(): void { \n  }\n\n}\n","<br><br>\n<div class=\"container\" style=\"height:800px;\">\n    <h2>Profile</h2>\n    <br><br>\n    <table class=\"table table-hover\">\n        <tbody>\n          <tr>\n            <th scope=\"row\">Name</th>\n            <td></td>\n            <td>{{user.name}}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Email</th>\n            <td></td>\n            <td>{{user.email}}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Username</th>\n            <td></td>\n            <td>@{{user.username}}</td>\n          </tr>\n        </tbody>\n      </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  status: String;\n\n  constructor(\n    private validateService: ValidateService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(){\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    }\n\n    //Validate all fields \n    if(!this.validateService.validateRegister(user)){\n      this.status=\"X  Please fill in all the fields.\";\n      return false;\n    } else{\n      this.status=\"\";\n    }\n\n    //Validate Email\n    if(!this.validateService.validateEmail(user.email)){\n      this.status=\"X  Please use a valid email.\";\n      return false;\n    } else{\n      this.status=\"\";\n    }\n\n    //Validate Password\n    if(!this.validateService.validatePassword(user.password)){\n      this.status=\"X Weak Password.\";\n      return false;\n    } else{\n      this.status = \"\";\n    }\n\n    //Register User\n    this.authService.registerUser(user).subscribe(data => {\n      console.log(data);\n      if(data.success){\n        this.status = \"You are now registered!\";\n      } else{\n        this.status = \"Some error occured!\";\n      }\n    });\n  }\n}\n","<div class=\"login-page\">\n    <h3>signup</h3>\n    <div class=\"form\">\n        <p id=\"status\">{{status}}</p>\n        <form>\n            <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" placeholder=\"Enter your name\"/>\n            <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Pick a username\"/>\n            <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Enter your email\"/>\n            <input type=\"password\"  [(ngModel)]=\"password\" name=\"password\" placeholder=\"Pick a password\"/>\n            <button id=\"signup-btn\" (click)=\"onSubmit()\">create</button>\n            <p class=\"message\">Already registered? <a [routerLink]=\"['/login']\">Sign In</a></p>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ColonyService } from '../../services/colony.service';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n\n  name: String;\n  wings: Array<String>;\n  distance: number;\n  secretary: String;\n  contact: String;\n  sports: Boolean;\n  pool: Boolean;\n  phc: Boolean;\n  \n  status : String;\n  wingNum : number;\n\n  constructor(private colonyService: ColonyService) { \n    this.sports = false;\n    this.phc = false;\n    this.pool = false;\n    this.wings=[];\n  }\n\n  ngOnInit(): void {\n  }\n\n  addColony(){\n    if (typeof this.name == 'undefined' || typeof this.wingNum == 'undefined' || typeof this.secretary == 'undefined'){\n      this.status = \"X Enter All Fields\";\n    }\n    else if (isNaN(this.wingNum) || this.wingNum>26){\n      this.status = \"X Improper Wing #\";\n    }\n    else if(isNaN(this.distance)){\n      this.status = \"X Improper Distance\";\n    }\n    else{\n      for (var i = 0; i < this.wingNum; i++) {\n        this.wings.push((i+10).toString(36).toUpperCase());     \n      }\n      let colony = {\n        name: this.name,\n        wings: this.wings,\n        distance: this.distance,\n        secretary: this.secretary,\n        contact: this.contact,\n        sports: this.sports,\n        pool: this.pool,\n        phc: this.phc\n      } \n      this.colonyService.insertColony(colony).subscribe(data =>{\n        this.status = data.msg; \n      });\n    }\n  }\n}\n","<br><br>\n<div class=\"container\">\n    <div class=\"content\">\n    <div class=\"form\">\n        <form class=\"colony-form\" id=\"colony-form\">\n            <p id=\"status\">{{status}}</p>\n            <!-- <input type=\"text\" placeholder=\"name\"/> -->\n            <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" required placeholder=\"colony name\"/>\n            <input type=\"text\" [(ngModel)]=\"wingNum\" name=\"wingNum\" placeholder=\"No. of wings\"/>\n            <input type=\"text\" [(ngModel)]=\"distance\" name=\"distance\" placeholder=\"distance\"/>\n            <input type=\"text\" [(ngModel)]=\"contact\" name=\"contact\" placeholder=\"Mobile Number\"/>\n            <input type=\"text\" [(ngModel)]=\"secretary\" name=\"secretary\" placeholder=\"secretary name\"/>\n            <div class=\"checkbox\" style=\"display: flex;justify-content: space-around;\">\n                <label><input [(ngModel)]=\"phc\" name=\"phc\" type=\"checkbox\" value=\"\">Hospital</label>\n                <label><input [(ngModel)]=\"pool\" name=\"pool\" type=\"checkbox\" value=\"\">Pool</label>\n                <label><input [(ngModel)]=\"sports\" name=\"sports\" type=\"checkbox\" value=\"\">Sports</label>\n            </div>\n            <button (click)=\"addColony()\">create colony</button>\n        </form>\n    </div>\n</div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor (\r\n    private authService:AuthService, \r\n    private router:Router\r\n  ){ }\r\n\r\n  canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n\n  constructor(private http:HttpClient,private jwtHelper: JwtHelperService, private router: Router) { }\n\n  registerUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('users/register', user,{headers: headers});\n  }\n\n  authenticateUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('users/authenticate', user,{headers: headers});\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    // console.log(this.jwtHelper.isTokenExpired());\n    return !this.jwtHelper.isTokenExpired();\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n    this.router.navigate(['/']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColonyService {\n\n  constructor(private http:HttpClient) { }\n\n  getColonies(){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.get<any>('colony/colony', {headers: headers});\n  }\n\n  getColonybyId(id){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('colony/byid', id, {headers: headers});\n  }\n\n  insertColony(colony){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('colony/addcolony', colony, {headers: headers});  \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private http:HttpClient) { }\n\n  getHomesByColonyIdAndWing(doc){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('homes/home', doc, {headers: headers});\n  }\n\n  insertHome(home){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>('homes/addhome', home, {headers: headers});      \n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n      return false;\n    } else{\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  validatePassword(pass){\n    const re = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n    return re.test(pass);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}